{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { join } from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","join","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","authSlice","name","reducers","reset","state","actions","reducer"],"sources":["C:/Users/jin/Documents/GitHub/web-mobile/React/test-ticket/front/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport {join} from './authService'\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n  name:'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState\r\n  }\r\n})\r\nexport const { reset } = authSlice.actions\r\nexport default authSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAAQC,IAAI,QAAO,eAAe;AAElC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG,IAAI;EACxBM,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;EACnCc,IAAI,EAAC,MAAM;EACXN,YAAY;EACZO,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAKT;EACpB;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEQ;AAAM,CAAC,GAAGH,SAAS,CAACK,OAAO;AAC1C,eAAeL,SAAS,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}